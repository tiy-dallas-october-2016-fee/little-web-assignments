{"version":3,"sources":["script.js"],"names":["mountNode","document","querySelector","Map","console","log","googleMap","google","maps","map","center","lat","lng","zoom","marker","Marker","position","title","props","data","undefined","locations","forEach","loc","width","height","React","Component","AppComponent","state","apiResult","$","ajax","url","done","setState","ReactDOM","render"],"mappings":";;;;;;;;;;AAAA,IAAIA,YAAYC,SAASC,aAAT,CAAuB,aAAvB,CAAhB;;AAGA;;IAEMC,G;;;;;;;;;;;wCAEgB;AAClBC,cAAQC,GAAR,CAAY,uBAAZ;AACA,WAAKC,SAAL,GAAiB,IAAIC,OAAOC,IAAP,CAAYL,GAAhB,CAAoB,KAAKM,GAAzB,EAA8B;AAC7CC,gBAAQ,EAAEC,KAAK,CAAC,MAAR,EAAgBC,KAAK,OAArB,EADqC;AAE7CC,cAAM;AAFuC,OAA9B,CAAjB;;AAKA,UAAIC,SAAS,IAAIP,OAAOC,IAAP,CAAYO,MAAhB,CAAuB;AAClCC,kBAAU,EAAEL,KAAK,CAAC,MAAR,EAAgBC,KAAK,OAArB,EADwB;AAElCH,aAAK,KAAKH,SAFwB;AAGlCW,eAAO;AAH2B,OAAvB,CAAb;AAMD;;;yCAEoB;AAAA;;AACnBb,cAAQC,GAAR,CAAY,yBAAZ,EAAuC,KAAKa,KAA5C;AACA,UAAI,KAAKA,KAAL,CAAWC,IAAX,KAAoBC,SAAxB,EAAmC;AACjChB,gBAAQC,GAAR,CAAY,WAAZ,EAAyB,KAAKa,KAA9B;AACA;AACD;AACD,WAAKA,KAAL,CAAWC,IAAX,CAAgBE,SAAhB,CAA0BC,OAA1B,CAAkC,UAACC,GAAD,EAAS;AACzCnB,gBAAQC,GAAR,CAAY,KAAZ,EAAmBkB,GAAnB;AACA,YAAIT,SAAS,IAAIP,OAAOC,IAAP,CAAYO,MAAhB,CAAuB;AAClCC,oBAAU,EAAEL,KAAKY,IAAIZ,GAAX,EAAgBC,KAAKW,IAAIX,GAAzB,EADwB;AAElCH,eAAK,OAAKH,SAFwB;AAGlCW,iBAAO;AAH2B,SAAvB,CAAb;AAKD,OAPD;AAQD;;;6BAEQ;AAAA;;AACPb,cAAQC,GAAR,CAAY,YAAZ;AACA,aAAO;AAAA;AAAA;AACL,qCAAK,KAAK,aAACI,GAAD,EAAS;AAAE,mBAAKA,GAAL,GAAWA,GAAX;AAAiB,WAAtC,EAAwC,OAAO,EAACe,OAAO,MAAR,EAAgBC,QAAQ,OAAxB,EAA/C;AADK,OAAP;AAGD;;;;EAtCeC,MAAMC,S;;IA0ClBC,Y;;;AAEJ,0BAAc;AAAA;;AAAA;;AAEZ,WAAKC,KAAL,GAAa;AACXC,iBAAW;AACTT,mBAAW;AADF;AADA,KAAb;AAFY;AAOb;;;;wCAEmB;AAAA;;AAClBjB,cAAQC,GAAR,CAAY,gCAAZ;;AAEA0B,QAAEC,IAAF,CAAO;AACLC,aAAK;AADA,OAAP,EAGCC,IAHD,CAGM,UAACf,IAAD,EAAU;AACdf,gBAAQC,GAAR,CAAY,OAAZ,EAAqBc,IAArB;AACA,eAAKgB,QAAL,CAAc;AACZL,qBAAWX;AADC,SAAd;AAGD,OARD;AASD;;;0CAEqB;AACpBf,cAAQC,GAAR,CAAY,uBAAZ;AACD;;;6BAEQ;AACP,aAAO;AAAA;AAAA;AAAA;AAEL,4BAAC,GAAD,IAAK,MAAM,KAAKwB,KAAL,CAAWC,SAAtB;AAFK,OAAP;AAKD;;;;EAnCwBJ,MAAMC,S;;AAsCjCS,SAASC,MAAT,CAAgB,oBAAC,YAAD,OAAhB,EAAkCrC,SAAlC","file":"script.js","sourcesContent":["var mountNode = document.querySelector('#react-root');\n\n\n//\n\nclass Map extends React.Component {\n\n  componentDidMount() {\n    console.log('Map componentDidMount');\n    this.googleMap = new google.maps.Map(this.map, {\n      center: { lat: -34.397, lng: 150.644 },\n      zoom: 8\n    });\n\n    var marker = new google.maps.Marker({\n      position: { lat: -34.397, lng: 150.644 },\n      map: this.googleMap,\n      title: 'Hello World!'\n    });\n\n  }\n\n  componentDidUpdate() {\n    console.log('Map componentWillUpdate', this.props);\n    if (this.props.data === undefined) {\n      console.log('Map props', this.props);\n      return;\n    }\n    this.props.data.locations.forEach((loc) => {\n      console.log('loc', loc);\n      var marker = new google.maps.Marker({\n        position: { lat: loc.lat, lng: loc.lng },\n        map: this.googleMap,\n        title: 'Hello World!'\n      });\n    });\n  }\n\n  render() {\n    console.log('Map render');\n    return <div>\n      <div ref={(map) => { this.map = map; }} style={{width: '100%', height: '400px'}}></div>\n    </div>\n  }\n}\n\n\nclass AppComponent extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      apiResult: {\n        locations: []\n      }\n    }\n  }\n\n  componentDidMount() {\n    console.log('AppComponent componentDidMount')\n\n    $.ajax({\n      url: '/api/locations'\n    })\n    .done((data) => {\n      console.log('data!', data);\n      this.setState({\n        apiResult: data\n      })\n    });\n  }\n\n  componentWillUpdate() {\n    console.log('AppComponent updating');\n  }\n\n  render() {\n    return <div>React works!\n\n      <Map data={this.state.apiResult} />\n\n    </div>;\n  }\n}\n\nReactDOM.render(<AppComponent />, mountNode);\n"]}