{"version":3,"sources":["script.js"],"names":["mountNode","document","querySelector","AppComponent","state","apiResult","items","page","console","log","callApi","query","sort","undefined","$","ajax","url","done","data","setState","queryInput","value","sortInput","search","input","next","map","item","id","login","React","Component","ReactDOM","render"],"mappings":";;;;;;;;;;AAAA,IAAIA,YAAYC,SAASC,aAAT,CAAuB,aAAvB,CAAhB;;IAEMC,Y;;;AAEJ,0BAAc;AAAA;;AAAA;;AAEZ,UAAKC,KAAL,GAAa;AACXC,iBAAW;AACTC,eAAO;AADE;AADA,KAAb;AAKA,UAAKC,IAAL,GAAY,CAAZ;AAPY;AAQb;;;;wCAEmB;AAClBC,cAAQC,GAAR,CAAY,qBAAZ;AACA,WAAKC,OAAL;AACD;;;4BAEOC,K,EAAOC,I,EAAML,I,EAAM;AAAA;;AAEzB,UAAII,UAAUE,SAAV,IAAuBF,UAAU,EAArC,EAAyC;AACvCA,gBAAQ,OAAR;AACD;;AAED,UAAIC,SAASC,SAAb,EAAwB;AACtBD,eAAO,EAAP;AACD;;AAED,UAAIL,SAASM,SAAb,EAAwB;AACtBN,eAAO,CAAP;AACD;;AAEDO,QAAEC,IAAF,CAAO;AACLC,aAAK,2CAA2CL,KAA3C,GACH,QADG,GACQC,IADR,GAEH,QAFG,GAEQL;AAHR,OAAP,EAKCU,IALD,CAKM,UAACC,IAAD,EAAU;AACdV,gBAAQC,GAAR,CAAY,MAAZ,EAAoBS,IAApB;AACA,eAAKC,QAAL,CAAc;AACZd,qBAAWa;AADC,SAAd;AAGD,OAVD;AAWD;;;6BAEQ;AACPV,cAAQC,GAAR,CAAY,QAAZ,EAAsB,KAAKW,UAAL,CAAgBC,KAAtC;;AAEA,WAAKX,OAAL,CAAa,KAAKU,UAAL,CAAgBC,KAA7B,EAAoC,KAAKC,SAAL,CAAeD,KAAnD,EAA0D,KAAKd,IAA/D;AACD;;;2BAEM;AACL,WAAKA,IAAL,IAAa,CAAb;AACA,WAAKgB,MAAL;AACD;;;6BAIQ;AAAA;;AACP,aAAO;AAAA;AAAA;AAEL;AAAA;AAAA,YAAK,WAAU,gBAAf;AACE,yCAAO,aAAY,OAAnB,EAA2B,KAAK,aAACC,KAAD,EAAW;AAAE,qBAAKJ,UAAL,GAAkBI,KAAlB;AAA0B,aAAvE,GADF;AAEE,yCAAO,aAAY,MAAnB,EAA0B,KAAK,aAACA,KAAD,EAAW;AAAE,qBAAKF,SAAL,GAAiBE,KAAjB;AAAyB,aAArE,GAFF;AAGE;AAAA;AAAA,cAAQ,SAAS,mBAAM;AAAE,uBAAKD,MAAL;AAAgB,eAAzC;AAAA;AAAA;AAHF,SAFK;AAQL;AAAA;AAAA,YAAQ,SAAS,mBAAM;AAAE,qBAAKE,IAAL;AAAc,aAAvC;AAAA;AAAA,SARK;AAUL;AAAA;AAAA;AACG,eAAKrB,KAAL,CAAWC,SAAX,CAAqBC,KAArB,CAA2BoB,GAA3B,CAA+B,UAACC,IAAD,EAAU;AACxC,mBAAO;AAAA;AAAA,gBAAI,KAAKA,KAAKC,EAAd;AAAmBD,mBAAKE;AAAxB,aAAP;AACD,WAFA;AADH;AAVK,OAAP;AAgBD;;;;EA1EwBC,MAAMC,S;;AA6EjCC,SAASC,MAAT,CAAgB,oBAAC,YAAD,OAAhB,EAAkCjC,SAAlC","file":"script.js","sourcesContent":["var mountNode = document.querySelector('#react-root');\n\nclass AppComponent extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      apiResult: {\n        items: []\n      }\n    };\n    this.page = 1;\n  }\n\n  componentDidMount() {\n    console.log('component did mount');\n    this.callApi();\n  }\n\n  callApi(query, sort, page) {\n\n    if (query === undefined || query === '') {\n      query = 'pants';\n    }\n\n    if (sort === undefined) {\n      sort = '';\n    }\n\n    if (page === undefined) {\n      page = 1\n    }\n\n    $.ajax({\n      url: 'https://api.github.com/search/users?q=' + query\n      + '&sort=' + sort\n      + '&page=' + page\n    })\n    .done((data) => {\n      console.log('data', data);\n      this.setState({\n        apiResult: data\n      });\n    });\n  }\n\n  search() {\n    console.log('search', this.queryInput.value);\n\n    this.callApi(this.queryInput.value, this.sortInput.value, this.page);\n  }\n\n  next() {\n    this.page += 1;\n    this.search();\n  }\n\n\n\n  render() {\n    return <div>\n\n      <div className=\"search-options\">\n        <input placeholder=\"query\" ref={(input) => { this.queryInput = input; }} />\n        <input placeholder=\"sort\" ref={(input) => { this.sortInput = input; }} />\n        <button onClick={() => { this.search(); }}>run search</button>\n      </div>\n\n      <button onClick={() => { this.next(); }}>next</button>\n\n      <ul>\n        {this.state.apiResult.items.map((item) => {\n          return <li key={item.id}>{item.login}</li>\n        })}\n      </ul>\n    </div>;\n  }\n}\n\nReactDOM.render(<AppComponent />, mountNode);\n"]}