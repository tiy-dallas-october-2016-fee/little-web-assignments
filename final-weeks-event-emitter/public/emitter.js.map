{"version":3,"sources":["emitter.js"],"names":["module","exports","Emitter","obj","mixin","key","prototype","on","addEventListener","event","fn","_callbacks","push","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","length","callbacks","cb","i","splice","emit","args","slice","call","len","listeners","hasListeners","window"],"mappings":"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","file":"emitter.js","sourcesContent":["//From: https://github.com/component/emitter\n(function() {\n\n  /**\n   * Expose `Emitter`.\n   */\n\n  if (typeof module !== 'undefined') {\n    module.exports = Emitter;\n  }\n\n  /**\n   * Initialize a new `Emitter`.\n   *\n   * @api public\n   */\n\n  function Emitter(obj) {\n    if (obj) return mixin(obj);\n  };\n\n  /**\n   * Mixin the emitter properties.\n   *\n   * @param {Object} obj\n   * @return {Object}\n   * @api private\n   */\n\n  function mixin(obj) {\n    for (var key in Emitter.prototype) {\n      obj[key] = Emitter.prototype[key];\n    }\n    return obj;\n  }\n\n  /**\n   * Listen on the given `event` with `fn`.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   * @return {Emitter}\n   * @api public\n   */\n\n  Emitter.prototype.on =\n  Emitter.prototype.addEventListener = function(event, fn){\n    this._callbacks = this._callbacks || {};\n    (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n      .push(fn);\n    return this;\n  };\n\n  /**\n   * Adds an `event` listener that will be invoked a single\n   * time then automatically removed.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   * @return {Emitter}\n   * @api public\n   */\n\n  Emitter.prototype.once = function(event, fn){\n    function on() {\n      this.off(event, on);\n      fn.apply(this, arguments);\n    }\n\n    on.fn = fn;\n    this.on(event, on);\n    return this;\n  };\n\n  /**\n   * Remove the given callback for `event` or all\n   * registered callbacks.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   * @return {Emitter}\n   * @api public\n   */\n\n  Emitter.prototype.off =\n  Emitter.prototype.removeListener =\n  Emitter.prototype.removeAllListeners =\n  Emitter.prototype.removeEventListener = function(event, fn){\n    this._callbacks = this._callbacks || {};\n\n    // all\n    if (0 == arguments.length) {\n      this._callbacks = {};\n      return this;\n    }\n\n    // specific event\n    var callbacks = this._callbacks['$' + event];\n    if (!callbacks) return this;\n\n    // remove all handlers\n    if (1 == arguments.length) {\n      delete this._callbacks['$' + event];\n      return this;\n    }\n\n    // remove specific handler\n    var cb;\n    for (var i = 0; i < callbacks.length; i++) {\n      cb = callbacks[i];\n      if (cb === fn || cb.fn === fn) {\n        callbacks.splice(i, 1);\n        break;\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Emit `event` with the given args.\n   *\n   * @param {String} event\n   * @param {Mixed} ...\n   * @return {Emitter}\n   */\n\n  Emitter.prototype.emit = function(event){\n    this._callbacks = this._callbacks || {};\n    var args = [].slice.call(arguments, 1)\n      , callbacks = this._callbacks['$' + event];\n\n    if (callbacks) {\n      callbacks = callbacks.slice(0);\n      for (var i = 0, len = callbacks.length; i < len; ++i) {\n        callbacks[i].apply(this, args);\n      }\n    }\n\n    return this;\n  };\n\n  /**\n   * Return array of callbacks for `event`.\n   *\n   * @param {String} event\n   * @return {Array}\n   * @api public\n   */\n\n  Emitter.prototype.listeners = function(event){\n    this._callbacks = this._callbacks || {};\n    return this._callbacks['$' + event] || [];\n  };\n\n  /**\n   * Check if this emitter has `event` handlers.\n   *\n   * @param {String} event\n   * @return {Boolean}\n   * @api public\n   */\n\n  Emitter.prototype.hasListeners = function(event){\n    return !! this.listeners(event).length;\n  };\n\n  window.Emitter = Emitter;\n\n})();\n"]}