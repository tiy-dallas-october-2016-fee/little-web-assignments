{"version":3,"sources":["script.js"],"names":["mountNode","document","querySelector","DataObject","counter","callbacks","incrementCount","console","log","forEach","cb","registerCallback","push","FirstComponent","state","count","setState","clicky","React","Component","SecondComponent","AppComponent","ReactDOM","render"],"mappings":";;;;;;;;;;AAAA,IAAIA,YAAYC,SAASC,aAAT,CAAuB,aAAvB,CAAhB;;AAGA,IAAIC,aAAa;AACfC,WAAS,CADM;AAEfC,aAAW,EAFI;;AAIfC,kBAAgB,0BAAW;AACzBC,YAAQC,GAAR,CAAY,aAAZ,EAA2B,IAA3B;AACA,SAAKJ,OAAL,IAAgB,CAAhB;AACA,SAAKC,SAAL,CAAeI,OAAf,CAAuB,UAACC,EAAD,EAAQ;AAC7BA;AACD,KAFD;AAGAH,YAAQC,GAAR,CAAY,YAAZ,EAA0B,IAA1B;AACD,GAXc;;AAaf;AACAG,oBAAkB,0BAASD,EAAT,EAAa;AAC7B,SAAKL,SAAL,CAAeO,IAAf,CAAoBF,EAApB;AACD;AAhBc,CAAjB;;IAqBMG,c;;;AACJ,4BAAc;AAAA;;AAAA;;AAEZ,UAAKC,KAAL,GAAa;AACXC,aAAO;AADI,KAAb;AAFY;AAKb;;;;wCAEmB;AAAA;;AAClBZ,iBAAWQ,gBAAX,CAA4B,YAAM;AAChC,eAAKK,QAAL,CAAc;AACZD,iBAAOZ,WAAWC;AADN,SAAd;AAGD,OAJD;AAKD;;;6BAEQ;AACPD,iBAAWG,cAAX;AACD;;;6BAEQ;AAAA;;AACP,aAAO;AAAA;AAAA;AAAA;AAAa,aAAKQ,KAAL,CAAWC,KAAxB;AACL;AAAA;AAAA,YAAQ,SAAS,mBAAM;AAAE,qBAAKE,MAAL;AAAgB,aAAzC;AAAA;AAAA;AADK,OAAP;AAGD;;;;EAxB0BC,MAAMC,S;;IA2B7BC,e;;;AAEJ,6BAAc;AAAA;;AAAA;;AAEZ,WAAKN,KAAL,GAAa;AACXC,aAAO;AADI,KAAb;AAFY;AAKb;;;;wCAEmB;AAAA;;AAClBZ,iBAAWQ,gBAAX,CAA4B,YAAM;AAChC,eAAKK,QAAL,CAAc;AACZD,iBAAOZ,WAAWC;AADN,SAAd;AAGD,OAJD;AAKD;;;6BAEQ;AACPD,iBAAWG,cAAX;AACD;;;6BAEQ;AAAA;;AACP,aAAO;AAAA;AAAA;AAAA;AAAwB,aAAKQ,KAAL,CAAWC,KAAnC;AACL;AAAA;AAAA,YAAQ,SAAS,mBAAM;AAAE,qBAAKE,MAAL;AAAgB,aAAzC;AAAA;AAAA;AADK,OAAP;AAGD;;;;EAzB2BC,MAAMC,S;;IAkC9BE,Y;;;;;;;;;;;6BACK;AACP,aAAO;AAAA;AAAA;AAEL,4BAAC,cAAD,OAFK;AAIL,4BAAC,eAAD;AAJK,OAAP;AAOD;;;;EATwBH,MAAMC,S;;AAYjCG,SAASC,MAAT,CAAgB,oBAAC,YAAD,OAAhB,EAAkCvB,SAAlC","file":"script.js","sourcesContent":["var mountNode = document.querySelector('#react-root');\n\n\nvar DataObject = {\n  counter: 0,\n  callbacks: [],\n\n  incrementCount: function() {\n    console.log('this before', this);\n    this.counter += 1;\n    this.callbacks.forEach((cb) => {\n      cb();\n    });\n    console.log('this after', this);\n  },\n\n  //Call this to keep track of who wants to know when the state changed.\n  registerCallback: function(cb) {\n    this.callbacks.push(cb);\n  }\n};\n\n\n\nclass FirstComponent extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      count: 0\n    };\n  }\n\n  componentDidMount() {\n    DataObject.registerCallback(() => {\n      this.setState({\n        count: DataObject.counter\n      });\n    })\n  }\n\n  clicky() {\n    DataObject.incrementCount();\n  }\n\n  render() {\n    return <div>Count: {this.state.count}\n      <button onClick={() => { this.clicky(); }}>increment</button>\n    </div>\n  }\n}\n\nclass SecondComponent extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      count: 0\n    };\n  }\n\n  componentDidMount() {\n    DataObject.registerCallback(() => {\n      this.setState({\n        count: DataObject.counter\n      });\n    })\n  }\n\n  clicky() {\n    DataObject.incrementCount();\n  }\n\n  render() {\n    return <div>This other count: {this.state.count}\n      <button onClick={() => { this.clicky(); }}>increment</button>\n    </div>\n  }\n}\n\n\n\n\n\n\n\nclass AppComponent extends React.Component {\n  render() {\n    return <div>\n\n      <FirstComponent />\n\n      <SecondComponent />\n\n    </div>;\n  }\n}\n\nReactDOM.render(<AppComponent />, mountNode);\n"]}